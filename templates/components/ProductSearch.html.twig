<div {{ attributes.defaults(stimulus_controller('product')) }}  
    data-action="
        catalog:setMax@window->product#setNewMax 
        filter:new@window->product#filter
        catalog-tree:revert@window->product#revert 
        catalog-tree:exclude@window->product#exclude
        catalog-tree:include@window->product#include
    "
    class="relative"
>
{%  set paginator = this.products  %}

    <div class="flex justify-between">
        <h1>Product list:</h1>
        <h2>Result: {{  paginator.count  }}</h2>
    </div>
    <span data-loading class="loader"></span>

    <div data-loading="addClass(blur)">
        <div class="flex justify-between m-auto">
            <div class="flex flex-wrap gap-4 m-auto" >
                {% for product in paginator.currentPageResults %}
                    <twig:Card :product="product"/>
                    {% else %}
                    <p>No products found.</p> 
                {% endfor %}
            </div>
        </div>
        {# <div id="product_scroll" data-product-target="scroll" class="flex flex-wrap gap-4">
            
        </div> #}
        {%   if paginator.hasNextPage  %}
            <twig:EndlessScroll
                :page="nextPage"
                :query="query"
                :includedCategories="includedCategories"
                :excludedCategories="excludedCategories"
                :filters="filters"
                loading="lazy"
            />
        {%   endif   %}
    </div>
</div>

{% macro placeholder(props) %}
    {# This content will (only) be rendered as loading content #}
    <span class="loader"></span>
{% endmacro %}
