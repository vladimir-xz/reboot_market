@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'Roboto';
  src: url('/fonts/Roboto-VariableFont_wdth,wght.ttf') format('truetype');
  /* If you have additional formats, you can add them like:
  src: url('/fonts/Roboto-VariableFont_wdth,wght.woff2') format('woff2'),
       url('/fonts/Roboto-VariableFont_wdth,wght.woff') format('woff');
  */
  font-weight: 100 900; /* This covers the variable weight range */
  font-style: normal;
  font-display: swap;
}

@layer base {
  *::-webkit-scrollbar {
    width: 0;
  }
  
  *::-webkit-scrollbar-track {
    background: transparent;
  }
  
  *::-webkit-scrollbar-thumb {
    background: transparent;
    border: none;
  }
}

@layer components {
    .carousel__button {
        @apply bg-teal-900 translate-x-6;
    }

    .category_neutral {
        @apply underline
    }

    .category_active {
        @apply underline text-amber-600
    }

    .category_included {
        @apply underline text-amber-600 text-opacity-50
    }

    .category_excluded {
        @apply line-through text-gray-600
    }
/* Customize the label (the check_box) */
.check_box {
    display: block;
    position: relative;
    padding-left: 25px;
    padding-bottom: 12px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  
  /* Hide the browser's default checkbox */
  .check_box input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  /* Create a custom checkbox */
  .checkmark {
    display: none;
    position: absolute;
    left: 0;
    height: 16px;
    width: 16px;
    background-color: #eee;
  }

  .item-cart:hover .checkmark,
  nav button:hover .checkmark {
    display: block; 
    }
  
  /* On mouse-over, add a grey background color */
  .check_box:hover input ~ .checkmark {
    background-color: #ccc;
  }

  .check_box:hover input ~ .checkmark:before,
  .check_box:hover input ~ .checkmark:after {
    opacity: 1;
  }
  
  /* When the checkbox is checked, add a blue background */
  .include_box input:checked ~ .checkmark {
    background-color: #595151;
  }

  .exclude_box input:checked ~ .checkmark {
    background-color: #736a6a;
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:before,
  .checkmark:after {
    content: "";
    position: absolute;
    opacity: 0.7;
  }
  
  /* Show the checkmark when checked */
  .check_box input:checked ~ .checkmark:before,
  .check_box input:checked ~ .checkmark:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .included_box .checkmark:after {
    left: 5px;
    top: 2px;
    width: 5px;
    height: 10px;
    @apply border-amber-600;
    @apply border-solid;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }


  .excluded_box .checkmark:after, 
  .excluded_box .checkmark:before {
    left: 6px;
    top: 3px;
    height: 10px;
    width: 3px;
    @apply bg-teal-900;
  }


  .excluded_box .checkmark:after {
    transform: rotate(45deg);
  }
  .excluded_box .checkmark:before {
    transform: rotate(-45deg);
  }

  .check_box input:checked ~ .checkmark {
    display: block;
  }

  .loader {
    position: absolute;
    top: 25%;
    right: 50%;
    width: 48px;
    height: 48px;
    border: 5px solid #FFF;
    @apply border-b-amber-600;
    border-radius: 50%;
    display: inline-block;
    box-sizing: border-box;
    animation: rotation 1s linear infinite;
    }

    @keyframes rotation {
      0% {
          transform: rotate(0deg);
      }
      100% {
          transform: rotate(360deg);
      }
    } 

    .blur {
      opacity: 0.7; 
      transition: opacity 0.1s ease;
      transition: filter 0.1s ease;
      -webkit-filter: blur(1px);
      -moz-filter: blur(1px);
      -o-filter: blur(1px);
      -ms-filter: blur(1px);
      filter: blur(1px);
    }

    .filter_passive {
      @apply opacity-60;
    }

    .menu_parent::after {
      content: ''; /* Required for the pseudo-element to render */
      display: inline-block;
      width: 16px; /* Desired width of the arrow */
      height: 16px; /* Desired height of the arrow */
      background-image: url('./down-arrow.png'); /* Path to your image */
      background-size: contain; /* Ensures the image fits within the specified dimensions */
      background-repeat: no-repeat; /* Prevents the image from repeating */
      background-position: center; /* Centers the image within the pseudo-element */
      margin-right: 16px; /* Optional: Adds spacing between the text and the arrow */
      vertical-align: middle; 
    }

    .arrow::after, .arrow::before {
      content: '';
      position: absolute;
      @apply w-7/12 h-1.5;
      @apply bg-teal-900;
    }

    .arrow_right::after {
      top: -7px;
      left: -4px;
      transform: rotate(-45deg);
    }
    
    .arrow_right::before {
      top: 7px;
      left: -4px;
      box-shadow: 0 3px 5px rgba(0, 0, 0, .2);
      transform: rotate(45deg);
    }
    
    .arrow_left::after {
      top: -7px;
      right: -4px;
      transform: rotate(45deg);
    }
    
    .arrow_left::before {
      top: 7px;
      right: -4px;
      box-shadow: 0 3px 5px rgba(0, 0, 0, .2);
      transform: rotate(-45deg);
    }

    .cart:hover .cart_menu {
      @apply flex flex-col gap-2;
    }

    .locale:hover .locale_menu {
      @apply flex gap-3;
    }
    
    table td, table th {
      border: 1px solid #ddd;
      padding: 8px;
    }
    
    table tr:nth-child(even){@apply bg-neutral-200}
    
    table tr:hover {@apply bg-neutral-50}
    
    table th {
      padding-top: 12px;
      padding-bottom: 12px;
      text-align: left;
      @apply bg-amber-600;
      color: white;
    }


/* 
    .include_box input:checked .check_box {
        display: flex;
    } */
    
    /* ... */

  }
